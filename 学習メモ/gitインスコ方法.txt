*****以下手順*****
*ダウンロード > https://git-scm.com/

*インストール
		ライセンス確認 > next
		インスコ先 > 任意の場所
		コンポーネント設定
		「Additional Icons」- 「On the Desktop」はアイコンをデスクトップに置く設定。不要なのでチェックを外す。
		「Windows Explorer Integration」はファイルやディレクトリを右クリックしたときのメニューに追加するかの設定,不要なのでチェックを外す。
		「Git LFS」は使うのでチェック。
		一番下の「Use a TrueType font in all console windows」は、文字化けが起きるのでチェック
	*スタートへの登録 > 適当
	*環境変数の設定
		・Use Git Bash only
			環境変数を汚さない。Cygwin等を導入している場合はこれ。
		・Use Git from the Windows Command Prompt
			コマンドプロンプトやPowerShellからGitのコマンドだけが使用できるように。
		・Use Git and included Unix tools from the Windows Command Prompt
			gitだけでなく、他のlsやlessなどをコマンドプロンプトやPowerShellから使用可能になります。 2017-07-27 (58).png
		
			今回はデフォルトの「Use Git from the Windows Command Prompt」にします。

	*SSLライブラリの登録 > そのまま
	*改行の設定
	・Checkout Windows-style, commit Unix-style line endings
		チェックアウト時に改行コードはCR LFに変更され、コミット時には全てLFに変換される。
	・Checkout as-is, commit Unix-style line endings
		チェックアウト時は改行コードについては何もしない、コミット時には全てLFに変換される。
	・Checkout as-is, commit as-is
		改行コードについては何もしない。

		以前は「Checkout as-is, commit as-is」にしていたのですが、最近はVMや検証環境で改行コードに悩まされる事が多いので今回は「Checkout as-is, commit Unix-style line endings」にします。

	*コンソール設定
		Gitで使用するコンソールをCygwinで使用されているMinTTYを使用するか、Windowsの標準コンソールを使用するか選択。
		Windowsの標準コンソールを選択。

	gitconfig設定
	・Enable file system caching
		git status時などでの応答速度を改善するfscacheキャッシュを有効にするかしないかオプション
	・Enable Git Credential Manager
		GitHub等にアクセスする際の二段階認証に対応するかのオプション
	・Enable symbolic links
		シンボリックリンクの使用/不使用のオプション 
	
		全てチェック
	
	